(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{69:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return d}));var n=a(3),r=a(7),i=(a(0),a(90)),l={title:"Command Line Client",slug:"/cli"},s={unversionedId:"cli",id:"cli",isDocsHomePage:!1,title:"Command Line Client",description:"Start a client",source:"@site/docs/cli.md",sourceDirName:".",slug:"/cli",permalink:"/net-level/docs/cli",version:"current",frontMatter:{title:"Command Line Client",slug:"/cli"},sidebar:"docs",previous:{title:"Net-Level Server Setup",permalink:"/net-level/docs/setup"},next:{title:"Application Server",permalink:"/net-level/docs/express"}},o=[{value:"Start a client",id:"start-a-client",children:[]},{value:"CLI Uses",id:"cli-uses",children:[]},{value:"Check Help",id:"check-help",children:[]},{value:"Create a Data Store",id:"create-a-data-store",children:[]},{value:"Add a key:value pairs",id:"add-a-keyvalue-pairs",children:[]},{value:"Range Queries",id:"range-queries",children:[]}],c={toc:o};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"start-a-client"},"Start a client"),Object(i.b)("p",null,"The default port for net-level is 3000. If you have started your server on another port, be sure to tell the client!"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"node lib/cli --user=admin --pass=adminpass --port 3333\n")),Object(i.b)("h2",{id:"cli-uses"},"CLI Uses"),Object(i.b)("p",null,"The net-level client provides an interface for simple admin tasks."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"The term ",Object(i.b)("inlineCode",{parentName:"p"},"base")," is used to refer to a data store"))),Object(i.b)("h2",{id:"check-help"},"Check Help"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"help")," will list available commands regardless of current connection and auth status, but command availability is limited by auth level with the connected server."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"[ grid.space net level client 1.0 ]\n:: help\nauth  [user] [pass]    - authenticate connection with server\ndrop  [base]           - drop a database (cannot be in use)\ndebug [base] [0|1]     - disable or enable debugging for a data store\nclose                  - disconnect client from server\nopen  [host] <port>    - connect client to a server\nstat  [cmd]  <opts>    - get server or data store stats (with auth)\nuser  [cmd]  <opts>    - get or set user info (with auth)\nuse   [base] <opts>    - make data store active (create with auth)\nget   [key]            - fetch key's value from active data store\nput   [key]  [value]   - put key/value pair into active data store\ndel   [key]            - delete key's value from active data store\nlist  [from] <to>      - list entries in range provided\ncull  [from] <to>      - delete entries in range provided\nkeys  [from] <to>      - list only keys in range provided\ncount [from] <to>      - count entries in range provided\nlimit [count]          - limit range queries to [count] max entries\nhelp  [command]        - command help\n")),Object(i.b)("h2",{id:"create-a-data-store"},"Create a Data Store"),Object(i.b)("p",null,"A store will be created if it does not already exist."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"use sandbox\n")),Object(i.b)("h2",{id:"add-a-keyvalue-pairs"},"Add a key:value pairs"),Object(i.b)("p",null,"The CLI only supports values with no spaces. More complex values must be added programmatically via the client library."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},':sandbox: put x {key:"value"}\n:sandbox: put y {foo:"bar"}\n')),Object(i.b)("h2",{id:"range-queries"},"Range Queries"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"keys"),", ",Object(i.b)("inlineCode",{parentName:"p"},"list"),", ",Object(i.b)("inlineCode",{parentName:"p"},"count"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"cull")," commands operate on Lexicographic order and return everthing greater than or equal to ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"from"))," and less than ",Object(i.b)("strong",{parentName:"p"},Object(i.b)("em",{parentName:"strong"},"to")),", unless a ",Object(i.b)("inlineCode",{parentName:"p"},"limit")," has been specified."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// keys [from] <to>\n:sandbox: keys x y\nx\n{ count: 1 }\n:sandbox: keys x z\nx\ny\n{ count: 2 }\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},":sandbox: list x z\n{ key: 'x', value: { key: 'value' } }\n{ key: 'y', value: { foo: 'bar' } }\n{ count: 2 }\n")))}d.isMDXComponent=!0}}]);